
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import sys
from pathlib import Path
import Model_inference as ssai
import time
import FE_FriendlyMain as backend

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import csv
import tkinter as tk

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets/frame1")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

import subprocess

def run_script(script_path):
    """Runs the gui1.py script in a separate process."""
    try:
        python_executable = sys.executable
        subprocess.Popen([python_executable, script_path])
        print("gui1.py started in a separate process.")
    except FileNotFoundError:
        print("Error: gui1.py not found.")
    except Exception as e:
        print(f"An error occurred while trying to run gui1.py: {e}")





def runai(bool=True):
    run_model = bool
    if run_model:
        input_file = r"DBs\expense_data.csv"
        output_file = ssai.predict_on_csv(input_file)
        print(f"Predictions saved to: {output_file}")

    data = backend.read_csv_data_list('DBs/expenses_predictions.csv')
    backend.open_potentialsaving(window, data)


window = Tk()

window.geometry("1920x1080+0+0")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 1080,
    width = 1920,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    931.0,
    295.0,
    image=image_image_1
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: runai(True),
    relief="flat"
)
button_1.place(
    x=49.0,
    y=386.0,
    width=534.0,
    height=401.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: run_script('gui6.py'),
    relief="flat"
)
button_2.place(
    x=703.0,
    y=399.0,
    width=494.0,
    height=378.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: run_script('gui4.py'),
    relief="flat"
)
button_3.place(
    x=1383.0,
    y=388.0,
    width=488.0,
    height=389.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: run_script('gui.py'),
    relief="flat"
)
button_4.place(
    x=0.0,
    y=960.0,
    width=288.0,
    height=106.0
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    959.0,
    127.0,
    image=image_image_2
)

def balance(csv1_path, csv2_path, canvas):
    def get_column_sum(path):
        total = 0.0
        with open(path, newline='') as file:
            reader = csv.reader(file)
            for row in reader:
                try:
                    total += float(row[2])  # 3rd column = index 2
                except (ValueError, IndexError):
                    continue  # skip rows with invalid/missing data
        return total

    sum1 = get_column_sum(csv1_path)
    sum2 = get_column_sum(csv2_path)
    difference = sum1 - sum2

    # Color the number based on positive/negative
    color = "green" if difference >= 0 else "red"

    # Add text to the canvas in top-right corner
    canvas.create_text(
        1900, 15,  # X, Y (a bit inset from 1920 width)
        text=f"${difference:,.2f}",
        anchor="ne",
        font=("Arial", 60, "bold"),
        fill=color
    )


balance(
    'DBs/income_data.csv',
    'DBs/expense_data.csv',
    canvas
)



window.resizable(False, False)
window.mainloop()
